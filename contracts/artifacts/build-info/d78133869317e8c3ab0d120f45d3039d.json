{
	"id": "d78133869317e8c3ab0d120f45d3039d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MultiTokenPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract MultiTokenPool {\r\n    using SafeERC20 for IERC20;\r\n\r\n    mapping(address => uint256) public totalPoolLiquidity;\r\n    address[] public supportedTokens;\r\n\r\n    event LiquidityAdded(address indexed provider, address token, uint256 amount);\r\n\r\n    constructor(address[] memory _tokens) {\r\n        supportedTokens = _tokens;\r\n    }\r\n\r\n    function addLiquidity(address token, uint256 amount) external {\r\n        require(isSupportedToken(token), \"Token not supported\");\r\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        totalPoolLiquidity[token] += amount;\r\n        emit LiquidityAdded(msg.sender, token, amount);\r\n    }\r\n\r\n    function isSupportedToken(address token) internal view returns (bool) {\r\n        for (uint i = 0; i < supportedTokens.length; i++) {\r\n            if (supportedTokens[i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MultiTokenPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MultiTokenPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MultiTokenPool.sol": {
				"MultiTokenPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "supportedTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalPoolLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MultiTokenPool.sol\":187:1122  contract MultiTokenPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MultiTokenPool.sol\":440:522  constructor(address[] memory _tokens) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MultiTokenPool.sol\":507:514  _tokens */\n  dup1\n    /* \"contracts/MultiTokenPool.sol\":489:504  supportedTokens */\n  0x01\n    /* \"contracts/MultiTokenPool.sol\":489:514  supportedTokens = _tokens */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/MultiTokenPool.sol\":440:522  constructor(address[] memory _tokens) {... */\n  pop\n    /* \"contracts/MultiTokenPool.sol\":187:1122  contract MultiTokenPool {... */\n  jump(tag_8)\ntag_7:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_9\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_9:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_16:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_18:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_19:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_20:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_21:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_22:\n    /* \"#utility.yul\":834:861   */\n  tag_40\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_42\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":907:995   */\ntag_41:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_23:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_44\n  tag_16\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_45\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_24:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_48\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1326:1382   */\ntag_47:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_25:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  dup1\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_26:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_27:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_52\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_28:\n    /* \"#utility.yul\":1920:1944   */\n  tag_54\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_27\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  dup1\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_55:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_29:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_57\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_28\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_30:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_59\n    /* \"#utility.yul\":2289:2353   */\n  tag_60\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2273:2354   */\n  tag_23\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_62\n  tag_25\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2505:2627   */\ntag_61:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_63:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_66\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_29\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_31:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_69\n  tag_19\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2994:3116   */\ntag_68:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_70\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3841   */\ntag_3:\n    /* \"#utility.yul\":3382:3388   */\n  0x00\n    /* \"#utility.yul\":3431:3433   */\n  0x20\n    /* \"#utility.yul\":3419:3428   */\n  dup3\n    /* \"#utility.yul\":3410:3417   */\n  dup5\n    /* \"#utility.yul\":3406:3429   */\n  sub\n    /* \"#utility.yul\":3402:3434   */\n  slt\n    /* \"#utility.yul\":3399:3518   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3437:3516   */\n  tag_73\n  tag_17\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3399:3518   */\ntag_72:\n    /* \"#utility.yul\":3578:3579   */\n  0x00\n    /* \"#utility.yul\":3567:3576   */\n  dup3\n    /* \"#utility.yul\":3563:3580   */\n  add\n    /* \"#utility.yul\":3557:3581   */\n  mload\n    /* \"#utility.yul\":3608:3626   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3600:3606   */\n  dup2\n    /* \"#utility.yul\":3597:3627   */\n  gt\n    /* \"#utility.yul\":3594:3711   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3630:3709   */\n  tag_75\n  tag_18\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3594:3711   */\ntag_74:\n    /* \"#utility.yul\":3735:3824   */\n  tag_76\n    /* \"#utility.yul\":3816:3823   */\n  dup5\n    /* \"#utility.yul\":3807:3813   */\n  dup3\n    /* \"#utility.yul\":3796:3805   */\n  dup6\n    /* \"#utility.yul\":3792:3814   */\n  add\n    /* \"#utility.yul\":3735:3824   */\n  tag_31\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3725:3824   */\n  swap2\n  pop\n    /* \"#utility.yul\":3528:3834   */\n  pop\n    /* \"#utility.yul\":3287:3841   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MultiTokenPool.sol\":187:1122  contract MultiTokenPool {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MultiTokenPool.sol\":187:1122  contract MultiTokenPool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3053f0b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x56688700\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc6255626\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MultiTokenPool.sol\":253:306  mapping(address => uint256) public totalPoolLiquidity */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MultiTokenPool.sol\":530:845  function addLiquidity(address token, uint256 amount) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/MultiTokenPool.sol\":313:345  address[] public supportedTokens */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MultiTokenPool.sol\":253:306  mapping(address => uint256) public totalPoolLiquidity */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MultiTokenPool.sol\":530:845  function addLiquidity(address token, uint256 amount) external {... */\n    tag_15:\n        /* \"contracts/MultiTokenPool.sol\":611:634  isSupportedToken(token) */\n      tag_23\n        /* \"contracts/MultiTokenPool.sol\":628:633  token */\n      dup3\n        /* \"contracts/MultiTokenPool.sol\":611:627  isSupportedToken */\n      tag_24\n        /* \"contracts/MultiTokenPool.sol\":611:634  isSupportedToken(token) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/MultiTokenPool.sol\":603:658  require(isSupportedToken(token), \"Token not supported\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/MultiTokenPool.sol\":669:734  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_28\n        /* \"contracts/MultiTokenPool.sol\":700:710  msg.sender */\n      caller\n        /* \"contracts/MultiTokenPool.sol\":720:724  this */\n      address\n        /* \"contracts/MultiTokenPool.sol\":727:733  amount */\n      dup4\n        /* \"contracts/MultiTokenPool.sol\":676:681  token */\n      dup6\n        /* \"contracts/MultiTokenPool.sol\":669:699  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_29\n      swap1\n        /* \"contracts/MultiTokenPool.sol\":669:734  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"contracts/MultiTokenPool.sol\":774:780  amount */\n      dup1\n        /* \"contracts/MultiTokenPool.sol\":745:763  totalPoolLiquidity */\n      0x00\n        /* \"contracts/MultiTokenPool.sol\":745:770  totalPoolLiquidity[token] */\n      dup1\n        /* \"contracts/MultiTokenPool.sol\":764:769  token */\n      dup5\n        /* \"contracts/MultiTokenPool.sol\":745:770  totalPoolLiquidity[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MultiTokenPool.sol\":745:780  totalPoolLiquidity[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MultiTokenPool.sol\":811:821  msg.sender */\n      caller\n        /* \"contracts/MultiTokenPool.sol\":796:837  LiquidityAdded(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4\n        /* \"contracts/MultiTokenPool.sol\":823:828  token */\n      dup4\n        /* \"contracts/MultiTokenPool.sol\":830:836  amount */\n      dup4\n        /* \"contracts/MultiTokenPool.sol\":796:837  LiquidityAdded(msg.sender, token, amount) */\n      mload(0x40)\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MultiTokenPool.sol\":530:845  function addLiquidity(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MultiTokenPool.sol\":313:345  address[] public supportedTokens */\n    tag_19:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MultiTokenPool.sol\":853:1119  function isSupportedToken(address token) internal view returns (bool) {... */\n    tag_24:\n        /* \"contracts/MultiTokenPool.sol\":917:921  bool */\n      0x00\n        /* \"contracts/MultiTokenPool.sol\":939:945  uint i */\n      dup1\n        /* \"contracts/MultiTokenPool.sol\":948:949  0 */\n      0x00\n        /* \"contracts/MultiTokenPool.sol\":939:949  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/MultiTokenPool.sol\":934:1089  for (uint i = 0; i < supportedTokens.length; i++) {... */\n    tag_37:\n        /* \"contracts/MultiTokenPool.sol\":955:970  supportedTokens */\n      0x01\n        /* \"contracts/MultiTokenPool.sol\":955:977  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/MultiTokenPool.sol\":951:952  i */\n      dup2\n        /* \"contracts/MultiTokenPool.sol\":951:977  i < supportedTokens.length */\n      lt\n        /* \"contracts/MultiTokenPool.sol\":934:1089  for (uint i = 0; i < supportedTokens.length; i++) {... */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/MultiTokenPool.sol\":1025:1030  token */\n      dup3\n        /* \"contracts/MultiTokenPool.sol\":1003:1030  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MultiTokenPool.sol\":1003:1018  supportedTokens */\n      0x01\n        /* \"contracts/MultiTokenPool.sol\":1019:1020  i */\n      dup3\n        /* \"contracts/MultiTokenPool.sol\":1003:1021  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n    tag_40:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MultiTokenPool.sol\":1003:1030  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MultiTokenPool.sol\":999:1078  if (supportedTokens[i] == token) {... */\n      tag_44\n      jumpi\n        /* \"contracts/MultiTokenPool.sol\":1058:1062  true */\n      0x01\n        /* \"contracts/MultiTokenPool.sol\":1051:1062  return true */\n      swap2\n      pop\n      pop\n      jump(tag_36)\n        /* \"contracts/MultiTokenPool.sol\":999:1078  if (supportedTokens[i] == token) {... */\n    tag_44:\n        /* \"contracts/MultiTokenPool.sol\":979:982  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/MultiTokenPool.sol\":934:1089  for (uint i = 0; i < supportedTokens.length; i++) {... */\n      jump(tag_37)\n    tag_38:\n      pop\n        /* \"contracts/MultiTokenPool.sol\":1106:1111  false */\n      0x00\n        /* \"contracts/MultiTokenPool.sol\":1099:1111  return false */\n      swap1\n      pop\n        /* \"contracts/MultiTokenPool.sol\":853:1119  function isSupportedToken(address token) internal view returns (bool) {... */\n    tag_36:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_46\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_52\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_53\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_59\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_68\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_67)\n    tag_68:\n      0x60\n      swap2\n      pop\n    tag_67:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_69\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_70\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_72\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_74\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_75)\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_71)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_71:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_83:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_85:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_86:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_111\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_85\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_87:\n        /* \"#utility.yul\":641:665   */\n      tag_113\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_86\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_114:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_88:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_116\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_87\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_119\n      tag_83\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":917:1036   */\n    tag_118:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_120\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_88\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_89:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_90:\n        /* \"#utility.yul\":1346:1370   */\n      tag_123\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_89\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_11:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_125\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_90\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_91:\n        /* \"#utility.yul\":1684:1708   */\n      tag_127\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_89\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_128:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_92:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_130\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_91\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_14:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_133\n      tag_83\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1977:2096   */\n    tag_132:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_134\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_88\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_135\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_18:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_138\n      tag_83\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2440:2559   */\n    tag_137:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_139\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_92\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_93:\n        /* \"#utility.yul\":2786:2810   */\n      tag_141\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_86\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_21:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_143\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_93\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3220   */\n    tag_94:\n        /* \"#utility.yul\":3135:3146   */\n      0x00\n        /* \"#utility.yul\":3169:3175   */\n      dup3\n        /* \"#utility.yul\":3164:3167   */\n      dup3\n        /* \"#utility.yul\":3157:3176   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x20\n        /* \"#utility.yul\":3204:3207   */\n      dup3\n        /* \"#utility.yul\":3200:3214   */\n      add\n        /* \"#utility.yul\":3185:3214   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3395   */\n    tag_95:\n        /* \"#utility.yul\":3366:3387   */\n      0x546f6b656e206e6f7420737570706f7274656400000000000000000000000000\n        /* \"#utility.yul\":3362:3363   */\n      0x00\n        /* \"#utility.yul\":3354:3360   */\n      dup3\n        /* \"#utility.yul\":3350:3364   */\n      add\n        /* \"#utility.yul\":3343:3388   */\n      mstore\n        /* \"#utility.yul\":3226:3395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3767   */\n    tag_96:\n        /* \"#utility.yul\":3543:3546   */\n      0x00\n        /* \"#utility.yul\":3564:3631   */\n      tag_147\n        /* \"#utility.yul\":3628:3630   */\n      0x13\n        /* \"#utility.yul\":3623:3626   */\n      dup4\n        /* \"#utility.yul\":3564:3631   */\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3557:3631   */\n      swap2\n      pop\n        /* \"#utility.yul\":3640:3733   */\n      tag_148\n        /* \"#utility.yul\":3729:3732   */\n      dup3\n        /* \"#utility.yul\":3640:3733   */\n      tag_95\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3758:3760   */\n      0x20\n        /* \"#utility.yul\":3753:3756   */\n      dup3\n        /* \"#utility.yul\":3749:3761   */\n      add\n        /* \"#utility.yul\":3742:3761   */\n      swap1\n      pop\n        /* \"#utility.yul\":3401:3767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3773:4192   */\n    tag_27:\n        /* \"#utility.yul\":3939:3943   */\n      0x00\n        /* \"#utility.yul\":3977:3979   */\n      0x20\n        /* \"#utility.yul\":3966:3975   */\n      dup3\n        /* \"#utility.yul\":3962:3980   */\n      add\n        /* \"#utility.yul\":3954:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":4026:4035   */\n      dup2\n        /* \"#utility.yul\":4020:4024   */\n      dup2\n        /* \"#utility.yul\":4016:4036   */\n      sub\n        /* \"#utility.yul\":4012:4013   */\n      0x00\n        /* \"#utility.yul\":4001:4010   */\n      dup4\n        /* \"#utility.yul\":3997:4014   */\n      add\n        /* \"#utility.yul\":3990:4037   */\n      mstore\n        /* \"#utility.yul\":4054:4185   */\n      tag_150\n        /* \"#utility.yul\":4180:4184   */\n      dup2\n        /* \"#utility.yul\":4054:4185   */\n      tag_96\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4046:4185   */\n      swap1\n      pop\n        /* \"#utility.yul\":3773:4192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4198:4378   */\n    tag_97:\n        /* \"#utility.yul\":4246:4323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4236:4324   */\n      mstore\n        /* \"#utility.yul\":4343:4347   */\n      0x11\n        /* \"#utility.yul\":4340:4341   */\n      0x04\n        /* \"#utility.yul\":4333:4348   */\n      mstore\n        /* \"#utility.yul\":4367:4371   */\n      0x24\n        /* \"#utility.yul\":4364:4365   */\n      0x00\n        /* \"#utility.yul\":4357:4372   */\n      revert\n        /* \"#utility.yul\":4384:4575   */\n    tag_31:\n        /* \"#utility.yul\":4424:4427   */\n      0x00\n        /* \"#utility.yul\":4443:4463   */\n      tag_153\n        /* \"#utility.yul\":4461:4462   */\n      dup3\n        /* \"#utility.yul\":4443:4463   */\n      tag_89\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4438:4463   */\n      swap2\n      pop\n        /* \"#utility.yul\":4477:4497   */\n      tag_154\n        /* \"#utility.yul\":4495:4496   */\n      dup4\n        /* \"#utility.yul\":4477:4497   */\n      tag_89\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4472:4497   */\n      swap3\n      pop\n        /* \"#utility.yul\":4520:4521   */\n      dup3\n        /* \"#utility.yul\":4517:4518   */\n      dup3\n        /* \"#utility.yul\":4513:4522   */\n      add\n        /* \"#utility.yul\":4506:4522   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4544   */\n      dup1\n        /* \"#utility.yul\":4538:4539   */\n      dup3\n        /* \"#utility.yul\":4535:4545   */\n      gt\n        /* \"#utility.yul\":4532:4568   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4548:4566   */\n      tag_156\n      tag_97\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4532:4568   */\n    tag_155:\n        /* \"#utility.yul\":4384:4575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4581:4913   */\n    tag_33:\n        /* \"#utility.yul\":4702:4706   */\n      0x00\n        /* \"#utility.yul\":4740:4742   */\n      0x40\n        /* \"#utility.yul\":4729:4738   */\n      dup3\n        /* \"#utility.yul\":4725:4743   */\n      add\n        /* \"#utility.yul\":4717:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4753:4824   */\n      tag_158\n        /* \"#utility.yul\":4821:4822   */\n      0x00\n        /* \"#utility.yul\":4810:4819   */\n      dup4\n        /* \"#utility.yul\":4806:4823   */\n      add\n        /* \"#utility.yul\":4797:4803   */\n      dup6\n        /* \"#utility.yul\":4753:4824   */\n      tag_93\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4834:4906   */\n      tag_159\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4891:4900   */\n      dup4\n        /* \"#utility.yul\":4887:4905   */\n      add\n        /* \"#utility.yul\":4878:4884   */\n      dup5\n        /* \"#utility.yul\":4834:4906   */\n      tag_90\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4581:4913   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4919:5099   */\n    tag_42:\n        /* \"#utility.yul\":4967:5044   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4964:4965   */\n      0x00\n        /* \"#utility.yul\":4957:5045   */\n      mstore\n        /* \"#utility.yul\":5064:5068   */\n      0x32\n        /* \"#utility.yul\":5061:5062   */\n      0x04\n        /* \"#utility.yul\":5054:5069   */\n      mstore\n        /* \"#utility.yul\":5088:5092   */\n      0x24\n        /* \"#utility.yul\":5085:5086   */\n      0x00\n        /* \"#utility.yul\":5078:5093   */\n      revert\n        /* \"#utility.yul\":5105:5547   */\n    tag_48:\n        /* \"#utility.yul\":5254:5258   */\n      0x00\n        /* \"#utility.yul\":5292:5294   */\n      0x60\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5277:5295   */\n      add\n        /* \"#utility.yul\":5269:5295   */\n      swap1\n      pop\n        /* \"#utility.yul\":5305:5376   */\n      tag_162\n        /* \"#utility.yul\":5373:5374   */\n      0x00\n        /* \"#utility.yul\":5362:5371   */\n      dup4\n        /* \"#utility.yul\":5358:5375   */\n      add\n        /* \"#utility.yul\":5349:5355   */\n      dup7\n        /* \"#utility.yul\":5305:5376   */\n      tag_93\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5386:5458   */\n      tag_163\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5443:5452   */\n      dup4\n        /* \"#utility.yul\":5439:5457   */\n      add\n        /* \"#utility.yul\":5430:5436   */\n      dup6\n        /* \"#utility.yul\":5386:5458   */\n      tag_93\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5468:5540   */\n      tag_164\n        /* \"#utility.yul\":5536:5538   */\n      0x40\n        /* \"#utility.yul\":5525:5534   */\n      dup4\n        /* \"#utility.yul\":5521:5539   */\n      add\n        /* \"#utility.yul\":5512:5518   */\n      dup5\n        /* \"#utility.yul\":5468:5540   */\n      tag_90\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5105:5547   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5553:5643   */\n    tag_98:\n        /* \"#utility.yul\":5587:5594   */\n      0x00\n        /* \"#utility.yul\":5630:5635   */\n      dup2\n        /* \"#utility.yul\":5623:5636   */\n      iszero\n        /* \"#utility.yul\":5616:5637   */\n      iszero\n        /* \"#utility.yul\":5605:5637   */\n      swap1\n      pop\n        /* \"#utility.yul\":5553:5643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5649:5765   */\n    tag_99:\n        /* \"#utility.yul\":5719:5740   */\n      tag_167\n        /* \"#utility.yul\":5734:5739   */\n      dup2\n        /* \"#utility.yul\":5719:5740   */\n      tag_98\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5712:5717   */\n      dup2\n        /* \"#utility.yul\":5709:5741   */\n      eq\n        /* \"#utility.yul\":5699:5759   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":5755:5756   */\n      0x00\n        /* \"#utility.yul\":5752:5753   */\n      dup1\n        /* \"#utility.yul\":5745:5757   */\n      revert\n        /* \"#utility.yul\":5699:5759   */\n    tag_168:\n        /* \"#utility.yul\":5649:5765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5771:5908   */\n    tag_100:\n        /* \"#utility.yul\":5825:5830   */\n      0x00\n        /* \"#utility.yul\":5856:5862   */\n      dup2\n        /* \"#utility.yul\":5850:5863   */\n      mload\n        /* \"#utility.yul\":5841:5863   */\n      swap1\n      pop\n        /* \"#utility.yul\":5872:5902   */\n      tag_170\n        /* \"#utility.yul\":5896:5901   */\n      dup2\n        /* \"#utility.yul\":5872:5902   */\n      tag_99\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5771:5908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5914:6259   */\n    tag_55:\n        /* \"#utility.yul\":5981:5987   */\n      0x00\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6018:6027   */\n      dup3\n        /* \"#utility.yul\":6009:6016   */\n      dup5\n        /* \"#utility.yul\":6005:6028   */\n      sub\n        /* \"#utility.yul\":6001:6033   */\n      slt\n        /* \"#utility.yul\":5998:6117   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":6036:6115   */\n      tag_173\n      tag_83\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5998:6117   */\n    tag_172:\n        /* \"#utility.yul\":6156:6157   */\n      0x00\n        /* \"#utility.yul\":6181:6242   */\n      tag_174\n        /* \"#utility.yul\":6234:6241   */\n      dup5\n        /* \"#utility.yul\":6225:6231   */\n      dup3\n        /* \"#utility.yul\":6214:6223   */\n      dup6\n        /* \"#utility.yul\":6210:6232   */\n      add\n        /* \"#utility.yul\":6181:6242   */\n      tag_100\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6171:6242   */\n      swap2\n      pop\n        /* \"#utility.yul\":6127:6252   */\n      pop\n        /* \"#utility.yul\":5914:6259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6363   */\n    tag_101:\n        /* \"#utility.yul\":6316:6322   */\n      0x00\n        /* \"#utility.yul\":6350:6355   */\n      dup2\n        /* \"#utility.yul\":6344:6356   */\n      mload\n        /* \"#utility.yul\":6334:6356   */\n      swap1\n      pop\n        /* \"#utility.yul\":6265:6363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6369:6516   */\n    tag_102:\n        /* \"#utility.yul\":6470:6481   */\n      0x00\n        /* \"#utility.yul\":6507:6510   */\n      dup2\n        /* \"#utility.yul\":6492:6510   */\n      swap1\n      pop\n        /* \"#utility.yul\":6369:6516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6522:6661   */\n    tag_103:\n        /* \"#utility.yul\":6611:6617   */\n      dup3\n        /* \"#utility.yul\":6606:6609   */\n      dup2\n        /* \"#utility.yul\":6601:6604   */\n      dup4\n        /* \"#utility.yul\":6595:6618   */\n      mcopy\n        /* \"#utility.yul\":6652:6653   */\n      0x00\n        /* \"#utility.yul\":6643:6649   */\n      dup4\n        /* \"#utility.yul\":6638:6641   */\n      dup4\n        /* \"#utility.yul\":6634:6650   */\n      add\n        /* \"#utility.yul\":6627:6654   */\n      mstore\n        /* \"#utility.yul\":6522:6661   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:7053   */\n    tag_104:\n        /* \"#utility.yul\":6771:6774   */\n      0x00\n        /* \"#utility.yul\":6799:6837   */\n      tag_179\n        /* \"#utility.yul\":6831:6836   */\n      dup3\n        /* \"#utility.yul\":6799:6837   */\n      tag_101\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6853:6941   */\n      tag_180\n        /* \"#utility.yul\":6934:6940   */\n      dup2\n        /* \"#utility.yul\":6929:6932   */\n      dup6\n        /* \"#utility.yul\":6853:6941   */\n      tag_102\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6846:6941   */\n      swap4\n      pop\n        /* \"#utility.yul\":6950:7015   */\n      tag_181\n        /* \"#utility.yul\":7008:7014   */\n      dup2\n        /* \"#utility.yul\":7003:7006   */\n      dup6\n        /* \"#utility.yul\":6996:7000   */\n      0x20\n        /* \"#utility.yul\":6989:6994   */\n      dup7\n        /* \"#utility.yul\":6985:7001   */\n      add\n        /* \"#utility.yul\":6950:7015   */\n      tag_103\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7040:7046   */\n      dup1\n        /* \"#utility.yul\":7035:7038   */\n      dup5\n        /* \"#utility.yul\":7031:7047   */\n      add\n        /* \"#utility.yul\":7024:7047   */\n      swap2\n      pop\n        /* \"#utility.yul\":6775:7053   */\n      pop\n        /* \"#utility.yul\":6667:7053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7059:7330   */\n    tag_65:\n        /* \"#utility.yul\":7189:7192   */\n      0x00\n        /* \"#utility.yul\":7211:7304   */\n      tag_183\n        /* \"#utility.yul\":7300:7303   */\n      dup3\n        /* \"#utility.yul\":7291:7297   */\n      dup5\n        /* \"#utility.yul\":7211:7304   */\n      tag_104\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7204:7304   */\n      swap2\n      pop\n        /* \"#utility.yul\":7321:7324   */\n      dup2\n        /* \"#utility.yul\":7314:7324   */\n      swap1\n      pop\n        /* \"#utility.yul\":7059:7330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e3f26c5222db058c19dd39d26685133df7145d745cbd436495863881c95c006464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3844:5",
										"nodeType": "YulBlock",
										"src": "0:3844:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "423:28:5",
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:5",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:5",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nativeSrc": "433:12:5",
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nativeSrc": "433:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nativeSrc": "505:54:5",
													"nodeType": "YulBlock",
													"src": "505:54:5",
													"statements": [
														{
															"nativeSrc": "515:38:5",
															"nodeType": "YulAssignment",
															"src": "515:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:5",
																				"nodeType": "YulLiteral",
																				"src": "540:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:5"
																		},
																		"nativeSrc": "529:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:5",
																				"nodeType": "YulLiteral",
																				"src": "549:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:5"
																		},
																		"nativeSrc": "545:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:5"
																},
																"nativeSrc": "525:28:5",
																"nodeType": "YulFunctionCall",
																"src": "525:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:5",
														"nodeType": "YulTypedName",
														"src": "488:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:5",
														"nodeType": "YulTypedName",
														"src": "498:6:5",
														"type": ""
													}
												],
												"src": "457:102:5"
											},
											{
												"body": {
													"nativeSrc": "593:152:5",
													"nodeType": "YulBlock",
													"src": "593:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:5",
																		"nodeType": "YulLiteral",
																		"src": "610:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:5",
																		"nodeType": "YulLiteral",
																		"src": "613:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:5"
																},
																"nativeSrc": "603:88:5",
																"nodeType": "YulFunctionCall",
																"src": "603:88:5"
															},
															"nativeSrc": "603:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:5",
																		"nodeType": "YulLiteral",
																		"src": "707:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:5",
																		"nodeType": "YulLiteral",
																		"src": "710:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:5"
																},
																"nativeSrc": "700:15:5",
																"nodeType": "YulFunctionCall",
																"src": "700:15:5"
															},
															"nativeSrc": "700:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:5",
																		"nodeType": "YulLiteral",
																		"src": "731:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:5",
																		"nodeType": "YulLiteral",
																		"src": "734:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:5"
																},
																"nativeSrc": "724:15:5",
																"nodeType": "YulFunctionCall",
																"src": "724:15:5"
															},
															"nativeSrc": "724:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:5"
											},
											{
												"body": {
													"nativeSrc": "794:238:5",
													"nodeType": "YulBlock",
													"src": "794:238:5",
													"statements": [
														{
															"nativeSrc": "804:58:5",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:5"
																		},
																		"nativeSrc": "834:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:5"
																},
																"nativeSrc": "822:40:5",
																"nodeType": "YulFunctionCall",
																"src": "822:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:5",
																	"nodeType": "YulTypedName",
																	"src": "808:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:5",
																"nodeType": "YulBlock",
																"src": "973:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:5"
																			},
																			"nativeSrc": "975:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:5"
																		},
																		"nativeSrc": "975:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:5",
																				"nodeType": "YulLiteral",
																				"src": "928:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:5"
																		},
																		"nativeSrc": "913:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:5"
																		},
																		"nativeSrc": "949:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:5"
																},
																"nativeSrc": "910:62:5",
																"nodeType": "YulFunctionCall",
																"src": "910:62:5"
															},
															"nativeSrc": "907:88:5",
															"nodeType": "YulIf",
															"src": "907:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:5"
																},
																"nativeSrc": "1004:22:5",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:5"
															},
															"nativeSrc": "1004:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:5",
														"nodeType": "YulTypedName",
														"src": "780:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:5",
														"nodeType": "YulTypedName",
														"src": "788:4:5",
														"type": ""
													}
												],
												"src": "751:281:5"
											},
											{
												"body": {
													"nativeSrc": "1079:88:5",
													"nodeType": "YulBlock",
													"src": "1079:88:5",
													"statements": [
														{
															"nativeSrc": "1089:30:5",
															"nodeType": "YulAssignment",
															"src": "1089:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:5"
																},
																"nativeSrc": "1099:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:5"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:5"
																},
																"nativeSrc": "1128:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:5"
															},
															"nativeSrc": "1128:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:5",
														"nodeType": "YulTypedName",
														"src": "1063:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:5",
														"nodeType": "YulTypedName",
														"src": "1072:6:5",
														"type": ""
													}
												],
												"src": "1038:129:5"
											},
											{
												"body": {
													"nativeSrc": "1255:229:5",
													"nodeType": "YulBlock",
													"src": "1255:229:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:5",
																"nodeType": "YulBlock",
																"src": "1360:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:5"
																			},
																			"nativeSrc": "1362:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:5"
																		},
																		"nativeSrc": "1362:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:5",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:5"
																},
																"nativeSrc": "1329:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:5"
															},
															"nativeSrc": "1326:56:5",
															"nodeType": "YulIf",
															"src": "1326:56:5"
														},
														{
															"nativeSrc": "1392:25:5",
															"nodeType": "YulAssignment",
															"src": "1392:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:5"
																},
																"nativeSrc": "1400:17:5",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:5"
																}
															]
														},
														{
															"nativeSrc": "1454:23:5",
															"nodeType": "YulAssignment",
															"src": "1454:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:5"
																},
																"nativeSrc": "1462:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:5",
														"nodeType": "YulTypedName",
														"src": "1239:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:5",
														"nodeType": "YulTypedName",
														"src": "1250:4:5",
														"type": ""
													}
												],
												"src": "1173:311:5"
											},
											{
												"body": {
													"nativeSrc": "1579:28:5",
													"nodeType": "YulBlock",
													"src": "1579:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:5"
																},
																"nativeSrc": "1589:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:5"
															},
															"nativeSrc": "1589:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:5"
											},
											{
												"body": {
													"nativeSrc": "1658:81:5",
													"nodeType": "YulBlock",
													"src": "1658:81:5",
													"statements": [
														{
															"nativeSrc": "1668:65:5",
															"nodeType": "YulAssignment",
															"src": "1668:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:5"
																},
																"nativeSrc": "1679:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:5",
														"nodeType": "YulTypedName",
														"src": "1640:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:5",
														"nodeType": "YulTypedName",
														"src": "1650:7:5",
														"type": ""
													}
												],
												"src": "1613:126:5"
											},
											{
												"body": {
													"nativeSrc": "1790:51:5",
													"nodeType": "YulBlock",
													"src": "1790:51:5",
													"statements": [
														{
															"nativeSrc": "1800:35:5",
															"nodeType": "YulAssignment",
															"src": "1800:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:5"
																},
																"nativeSrc": "1811:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:5",
														"nodeType": "YulTypedName",
														"src": "1772:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:5",
														"nodeType": "YulTypedName",
														"src": "1782:7:5",
														"type": ""
													}
												],
												"src": "1745:96:5"
											},
											{
												"body": {
													"nativeSrc": "1890:79:5",
													"nodeType": "YulBlock",
													"src": "1890:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:5",
																"nodeType": "YulBlock",
																"src": "1947:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:5"
																			},
																			"nativeSrc": "1949:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:5"
																		},
																		"nativeSrc": "1949:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:5"
																				},
																				"nativeSrc": "1920:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:5"
																		},
																		"nativeSrc": "1910:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:5"
																},
																"nativeSrc": "1903:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:5"
															},
															"nativeSrc": "1900:63:5",
															"nodeType": "YulIf",
															"src": "1900:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:5",
														"nodeType": "YulTypedName",
														"src": "1883:5:5",
														"type": ""
													}
												],
												"src": "1847:122:5"
											},
											{
												"body": {
													"nativeSrc": "2038:80:5",
													"nodeType": "YulBlock",
													"src": "2038:80:5",
													"statements": [
														{
															"nativeSrc": "2048:22:5",
															"nodeType": "YulAssignment",
															"src": "2048:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:5"
																},
																"nativeSrc": "2057:13:5",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:5"
																},
																"nativeSrc": "2079:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:5"
															},
															"nativeSrc": "2079:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:5",
														"nodeType": "YulTypedName",
														"src": "2016:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:5",
														"nodeType": "YulTypedName",
														"src": "2024:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:5",
														"nodeType": "YulTypedName",
														"src": "2032:5:5",
														"type": ""
													}
												],
												"src": "1975:143:5"
											},
											{
												"body": {
													"nativeSrc": "2254:619:5",
													"nodeType": "YulBlock",
													"src": "2254:619:5",
													"statements": [
														{
															"nativeSrc": "2264:90:5",
															"nodeType": "YulAssignment",
															"src": "2264:90:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:5"
																		},
																		"nativeSrc": "2289:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:5"
																},
																"nativeSrc": "2273:81:5",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:5"
																}
															]
														},
														{
															"nativeSrc": "2363:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:5",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:5",
																"nodeType": "YulIdentifier",
																"src": "2374:5:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:5",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:5"
																},
																"nativeSrc": "2389:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:5"
															},
															"nativeSrc": "2389:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:5"
														},
														{
															"nativeSrc": "2419:23:5",
															"nodeType": "YulAssignment",
															"src": "2419:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:5"
																},
																"nativeSrc": "2426:16:5",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:5"
																}
															]
														},
														{
															"nativeSrc": "2452:44:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:5"
																		},
																		"nativeSrc": "2478:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:5"
																},
																"nativeSrc": "2466:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:5"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:5",
																"nodeType": "YulBlock",
																"src": "2524:103:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:5"
																			},
																			"nativeSrc": "2538:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:5"
																		},
																		"nativeSrc": "2538:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:5"
																},
																"nativeSrc": "2508:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:5"
															},
															"nativeSrc": "2505:122:5",
															"nodeType": "YulIf",
															"src": "2505:122:5"
														},
														{
															"body": {
																"nativeSrc": "2712:155:5",
																"nodeType": "YulBlock",
																"src": "2712:155:5",
																"statements": [
																	{
																		"nativeSrc": "2727:21:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:5",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:5"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:5",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:5"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:5"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:5",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:5"
																					},
																					"nativeSrc": "2774:48:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:5"
																			},
																			"nativeSrc": "2762:61:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:5"
																		},
																		"nativeSrc": "2762:61:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:5"
																	},
																	{
																		"nativeSrc": "2836:21:5",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:5"
																			},
																			"nativeSrc": "2843:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:5"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:5"
																},
																"nativeSrc": "2662:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:5"
															},
															"nativeSrc": "2636:231:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:5",
																"nodeType": "YulBlock",
																"src": "2678:25:5",
																"statements": [
																	{
																		"nativeSrc": "2680:21:5",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:5"
																			},
																			"nativeSrc": "2687:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:5",
																"nodeType": "YulBlock",
																"src": "2640:21:5",
																"statements": [
																	{
																		"nativeSrc": "2642:17:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:5",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:5"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:5",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:5",
														"nodeType": "YulTypedName",
														"src": "2224:6:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:5",
														"nodeType": "YulTypedName",
														"src": "2232:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:5",
														"nodeType": "YulTypedName",
														"src": "2240:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:5",
														"nodeType": "YulTypedName",
														"src": "2248:5:5",
														"type": ""
													}
												],
												"src": "2141:732:5"
											},
											{
												"body": {
													"nativeSrc": "2984:297:5",
													"nodeType": "YulBlock",
													"src": "2984:297:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:5",
																"nodeType": "YulBlock",
																"src": "3033:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:5"
																			},
																			"nativeSrc": "3035:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:5"
																		},
																		"nativeSrc": "3035:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:5"
																				},
																				"nativeSrc": "3008:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:5"
																		},
																		"nativeSrc": "3004:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:5"
																},
																"nativeSrc": "2997:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:5"
															},
															"nativeSrc": "2994:122:5",
															"nodeType": "YulIf",
															"src": "2994:122:5"
														},
														{
															"nativeSrc": "3125:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:5"
																},
																"nativeSrc": "3139:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:5",
															"nodeType": "YulAssignment",
															"src": "3161:114:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:5"
																		},
																		"nativeSrc": "3244:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:5",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:5"
																},
																"nativeSrc": "3170:105:5",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:5",
														"nodeType": "YulTypedName",
														"src": "2962:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:5",
														"nodeType": "YulTypedName",
														"src": "2970:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:5",
														"nodeType": "YulTypedName",
														"src": "2978:5:5",
														"type": ""
													}
												],
												"src": "2896:385:5"
											},
											{
												"body": {
													"nativeSrc": "3389:452:5",
													"nodeType": "YulBlock",
													"src": "3389:452:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3435:83:5",
																"nodeType": "YulBlock",
																"src": "3435:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3437:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3437:77:5"
																			},
																			"nativeSrc": "3437:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3437:79:5"
																		},
																		"nativeSrc": "3437:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3406:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:5"
																		},
																		"nativeSrc": "3406:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3431:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3402:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:5"
																},
																"nativeSrc": "3402:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3402:32:5"
															},
															"nativeSrc": "3399:119:5",
															"nodeType": "YulIf",
															"src": "3399:119:5"
														},
														{
															"nativeSrc": "3528:306:5",
															"nodeType": "YulBlock",
															"src": "3528:306:5",
															"statements": [
																{
																	"nativeSrc": "3543:38:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3578:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3578:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:5"
																				},
																				"nativeSrc": "3563:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3557:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3557:5:5"
																		},
																		"nativeSrc": "3557:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3547:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3628:83:5",
																		"nodeType": "YulBlock",
																		"src": "3628:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3630:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "3630:77:5"
																					},
																					"nativeSrc": "3630:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3630:79:5"
																				},
																				"nativeSrc": "3630:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3630:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3600:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:18:5",
																				"nodeType": "YulLiteral",
																				"src": "3608:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3597:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3597:2:5"
																		},
																		"nativeSrc": "3597:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:30:5"
																	},
																	"nativeSrc": "3594:117:5",
																	"nodeType": "YulIf",
																	"src": "3594:117:5"
																},
																{
																	"nativeSrc": "3725:99:5",
																	"nodeType": "YulAssignment",
																	"src": "3725:99:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3796:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3796:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3807:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3807:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3792:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:5"
																				},
																				"nativeSrc": "3792:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3792:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3816:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3816:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3735:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "3735:56:5"
																		},
																		"nativeSrc": "3735:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:89:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3725:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3725:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3287:554:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:5",
														"nodeType": "YulTypedName",
														"src": "3359:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3370:7:5",
														"nodeType": "YulTypedName",
														"src": "3370:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3382:6:5",
														"nodeType": "YulTypedName",
														"src": "3382:6:5",
														"type": ""
													}
												],
												"src": "3287:554:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610c64380380610c64833981810160405281019061003191906102ab565b806001908051906020019061004792919061004e565b50506102f2565b828054828255905f5260205f209081019282156100c4579160200282015b828111156100c3578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061006c565b5b5090506100d191906100d5565b5090565b5b808211156100ec575f815f9055506001016100d6565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61014b82610105565b810181811067ffffffffffffffff8211171561016a57610169610115565b5b80604052505050565b5f61017c6100f0565b90506101888282610142565b919050565b5f67ffffffffffffffff8211156101a7576101a6610115565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e5826101bc565b9050919050565b6101f5816101db565b81146101ff575f80fd5b50565b5f81519050610210816101ec565b92915050565b5f6102286102238461018d565b610173565b9050808382526020820190506020840283018581111561024b5761024a6101b8565b5b835b8181101561027457806102608882610202565b84526020840193505060208101905061024d565b5050509392505050565b5f82601f83011261029257610291610101565b5b81516102a2848260208601610216565b91505092915050565b5f602082840312156102c0576102bf6100f9565b5b5f82015167ffffffffffffffff8111156102dd576102dc6100fd565b5b6102e98482850161027e565b91505092915050565b610965806102ff5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633053f0b2146100435780635668870014610073578063c62556261461008f575b5f80fd5b61005d600480360381019061005891906105ef565b6100bf565b60405161006a9190610632565b60405180910390f35b61008d60048036038101906100889190610675565b6100d3565b005b6100a960048036038101906100a491906106b3565b6101ee565b6040516100b691906106ed565b60405180910390f35b5f602052805f5260405f205f915090505481565b6100dc82610229565b61011b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011290610760565b60405180910390fd5b6101483330838573ffffffffffffffffffffffffffffffffffffffff166102cb909392919063ffffffff16565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461019391906107ab565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb483836040516101e29291906107de565b60405180910390a25050565b600181815481106101fd575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f90505b6001805490508110156102c1578273ffffffffffffffffffffffffffffffffffffffff166001828154811061026757610266610805565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102b45760019150506102c6565b808060010191505061022f565b505f90505b919050565b610347848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161030093929190610832565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061034d565b50505050565b5f610377828473ffffffffffffffffffffffffffffffffffffffff166103e290919063ffffffff16565b90505f81511415801561039b575080806020019051810190610399919061089c565b155b156103dd57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016103d491906106ed565b60405180910390fd5b505050565b60606103ef83835f6103f7565b905092915050565b60608147101561043e57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161043591906106ed565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516104669190610919565b5f6040518083038185875af1925050503d805f81146104a0576040519150601f19603f3d011682016040523d82523d5f602084013e6104a5565b606091505b50915091506104b58683836104c0565b925050509392505050565b6060826104d5576104d08261054d565b610545565b5f82511480156104fb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561053d57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161053491906106ed565b60405180910390fd5b819050610546565b5b9392505050565b5f8151111561055f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105be82610595565b9050919050565b6105ce816105b4565b81146105d8575f80fd5b50565b5f813590506105e9816105c5565b92915050565b5f6020828403121561060457610603610591565b5b5f610611848285016105db565b91505092915050565b5f819050919050565b61062c8161061a565b82525050565b5f6020820190506106455f830184610623565b92915050565b6106548161061a565b811461065e575f80fd5b50565b5f8135905061066f8161064b565b92915050565b5f806040838503121561068b5761068a610591565b5b5f610698858286016105db565b92505060206106a985828601610661565b9150509250929050565b5f602082840312156106c8576106c7610591565b5b5f6106d584828501610661565b91505092915050565b6106e7816105b4565b82525050565b5f6020820190506107005f8301846106de565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f61074a601383610706565b915061075582610716565b602082019050919050565b5f6020820190508181035f8301526107778161073e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107b58261061a565b91506107c08361061a565b92508282019050808211156107d8576107d761077e565b5b92915050565b5f6040820190506107f15f8301856106de565b6107fe6020830184610623565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6060820190506108455f8301866106de565b61085260208301856106de565b61085f6040830184610623565b949350505050565b5f8115159050919050565b61087b81610867565b8114610885575f80fd5b50565b5f8151905061089681610872565b92915050565b5f602082840312156108b1576108b0610591565b5b5f6108be84828501610888565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108f3826108c7565b6108fd81856108d1565b935061090d8185602086016108db565b80840191505092915050565b5f61092482846108e9565b91508190509291505056fea2646970667358221220e3f26c5222db058c19dd39d26685133df7145d745cbd436495863881c95c006464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC64 CODESIZE SUB DUP1 PUSH2 0xC64 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2AB JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x47 SWAP3 SWAP2 SWAP1 PUSH2 0x4E JUMP JUMPDEST POP POP PUSH2 0x2F2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC3 JUMPI DUP3 MLOAD DUP3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xD5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xEC JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xD6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x14B DUP3 PUSH2 0x105 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x115 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x188 DUP3 DUP3 PUSH2 0x142 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1A6 PUSH2 0x115 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5 DUP3 PUSH2 0x1BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5 DUP2 PUSH2 0x1DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x210 DUP2 PUSH2 0x1EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x228 PUSH2 0x223 DUP5 PUSH2 0x18D JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24A PUSH2 0x1B8 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274 JUMPI DUP1 PUSH2 0x260 DUP9 DUP3 PUSH2 0x202 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x101 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2A2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0xF9 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0xFD JUMP JUMPDEST JUMPDEST PUSH2 0x2E9 DUP5 DUP3 DUP6 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x965 DUP1 PUSH2 0x2FF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3053F0B2 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC DUP3 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x7AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2C1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x805 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B4 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2C6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x22F JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x300 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x377 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3DD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3EF DUP4 DUP4 PUSH0 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x43E JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x919 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4B5 DUP7 DUP4 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4D5 JUMPI PUSH2 0x4D0 DUP3 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x4FB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x546 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x55F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BE DUP3 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5E9 DUP2 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x611 DUP5 DUP3 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62C DUP2 PUSH2 0x61A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH0 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x654 DUP2 PUSH2 0x61A JUMP JUMPDEST DUP2 EQ PUSH2 0x65E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66F DUP2 PUSH2 0x64B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x68B JUMPI PUSH2 0x68A PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x698 DUP6 DUP3 DUP7 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D5 DUP5 DUP3 DUP6 ADD PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E7 DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x700 PUSH0 DUP4 ADD DUP5 PUSH2 0x6DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x74A PUSH1 0x13 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH2 0x755 DUP3 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x777 DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7B5 DUP3 PUSH2 0x61A JUMP JUMPDEST SWAP2 POP PUSH2 0x7C0 DUP4 PUSH2 0x61A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D7 PUSH2 0x77E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x7FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x845 PUSH0 DUP4 ADD DUP7 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x852 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x85F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87B DUP2 PUSH2 0x867 JUMP JUMPDEST DUP2 EQ PUSH2 0x885 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x896 DUP2 PUSH2 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BE DUP5 DUP3 DUP6 ADD PUSH2 0x888 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F3 DUP3 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x8FD DUP2 DUP6 PUSH2 0x8D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x90D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8DB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 DUP3 DUP5 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 CALLCODE PUSH13 0x5222DB058C19DD39D26685133D 0xF7 EQ TSTORE PUSH21 0x5CBD436495863881C95C006464736F6C634300081A STOP CALLER ",
							"sourceMap": "187:935:4:-:0;;;440:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;507:7;489:15;:25;;;;;;;;;;;;:::i;:::-;;440:82;187:935;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;187:935:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 845,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 1357,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_731": {
									"entryPoint": 211,
									"id": 731,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 1015,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 994,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isSupportedToken_763": {
									"entryPoint": 553,
									"id": 763,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_190": {
									"entryPoint": 715,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@supportedTokens_671": {
									"entryPoint": 494,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPoolLiquidity_668": {
									"entryPoint": 191,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 1216,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7333:5",
										"nodeType": "YulBlock",
										"src": "0:7333:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1481:124:5",
													"nodeType": "YulBlock",
													"src": "1481:124:5",
													"statements": [
														{
															"nativeSrc": "1491:26:5",
															"nodeType": "YulAssignment",
															"src": "1491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:5"
																},
																"nativeSrc": "1499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:5"
																		},
																		"nativeSrc": "1580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:5"
																},
																"nativeSrc": "1527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:5"
															},
															"nativeSrc": "1527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:5",
														"nodeType": "YulTypedName",
														"src": "1453:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:5",
														"nodeType": "YulTypedName",
														"src": "1465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:5",
														"nodeType": "YulTypedName",
														"src": "1476:4:5",
														"type": ""
													}
												],
												"src": "1383:222:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1967:391:5",
													"nodeType": "YulBlock",
													"src": "1967:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:5",
																"nodeType": "YulBlock",
																"src": "2013:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:5"
																			},
																			"nativeSrc": "2015:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:5"
																		},
																		"nativeSrc": "2015:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:5"
																		},
																		"nativeSrc": "1984:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:5"
																},
																"nativeSrc": "1980:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:5"
															},
															"nativeSrc": "1977:119:5",
															"nodeType": "YulIf",
															"src": "1977:119:5"
														},
														{
															"nativeSrc": "2106:117:5",
															"nodeType": "YulBlock",
															"src": "2106:117:5",
															"statements": [
																{
																	"nativeSrc": "2121:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:5"
																				},
																				"nativeSrc": "2181:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2160:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:5"
																		},
																		"nativeSrc": "2160:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:5",
															"nodeType": "YulBlock",
															"src": "2233:118:5",
															"statements": [
																{
																	"nativeSrc": "2248:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1884:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:5",
														"nodeType": "YulTypedName",
														"src": "1929:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:5",
														"nodeType": "YulTypedName",
														"src": "1940:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:5",
														"nodeType": "YulTypedName",
														"src": "1952:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:5",
														"nodeType": "YulTypedName",
														"src": "1960:6:5",
														"type": ""
													}
												],
												"src": "1884:474:5"
											},
											{
												"body": {
													"nativeSrc": "2430:263:5",
													"nodeType": "YulBlock",
													"src": "2430:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:5",
																"nodeType": "YulBlock",
																"src": "2476:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:5"
																			},
																			"nativeSrc": "2478:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:5"
																		},
																		"nativeSrc": "2478:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:5"
																		},
																		"nativeSrc": "2447:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:5"
																},
																"nativeSrc": "2443:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:5"
															},
															"nativeSrc": "2440:119:5",
															"nodeType": "YulIf",
															"src": "2440:119:5"
														},
														{
															"nativeSrc": "2569:117:5",
															"nodeType": "YulBlock",
															"src": "2569:117:5",
															"statements": [
																{
																	"nativeSrc": "2584:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:5"
																				},
																				"nativeSrc": "2644:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:5"
																		},
																		"nativeSrc": "2623:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2364:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:5",
														"nodeType": "YulTypedName",
														"src": "2400:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:5",
														"nodeType": "YulTypedName",
														"src": "2411:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:5",
														"nodeType": "YulTypedName",
														"src": "2423:6:5",
														"type": ""
													}
												],
												"src": "2364:329:5"
											},
											{
												"body": {
													"nativeSrc": "2764:53:5",
													"nodeType": "YulBlock",
													"src": "2764:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2781:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2804:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2786:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:5"
																		},
																		"nativeSrc": "2786:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2774:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:5"
																},
																"nativeSrc": "2774:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2774:37:5"
															},
															"nativeSrc": "2774:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2699:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:5",
														"nodeType": "YulTypedName",
														"src": "2752:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2759:3:5",
														"nodeType": "YulTypedName",
														"src": "2759:3:5",
														"type": ""
													}
												],
												"src": "2699:118:5"
											},
											{
												"body": {
													"nativeSrc": "2921:124:5",
													"nodeType": "YulBlock",
													"src": "2921:124:5",
													"statements": [
														{
															"nativeSrc": "2931:26:5",
															"nodeType": "YulAssignment",
															"src": "2931:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2943:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2954:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2939:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:5"
																},
																"nativeSrc": "2939:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2939:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2931:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3011:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3024:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3035:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3020:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:5"
																		},
																		"nativeSrc": "3020:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2967:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:5"
																},
																"nativeSrc": "2967:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2967:71:5"
															},
															"nativeSrc": "2967:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2823:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2893:9:5",
														"nodeType": "YulTypedName",
														"src": "2893:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2905:6:5",
														"nodeType": "YulTypedName",
														"src": "2905:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2916:4:5",
														"nodeType": "YulTypedName",
														"src": "2916:4:5",
														"type": ""
													}
												],
												"src": "2823:222:5"
											},
											{
												"body": {
													"nativeSrc": "3147:73:5",
													"nodeType": "YulBlock",
													"src": "3147:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3164:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3164:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3169:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3169:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3157:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:5"
																},
																"nativeSrc": "3157:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3157:19:5"
															},
															"nativeSrc": "3157:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3157:19:5"
														},
														{
															"nativeSrc": "3185:29:5",
															"nodeType": "YulAssignment",
															"src": "3185:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3204:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3204:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3209:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3200:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:5"
																},
																"nativeSrc": "3200:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3200:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3185:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3185:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3051:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3119:3:5",
														"nodeType": "YulTypedName",
														"src": "3119:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3124:6:5",
														"nodeType": "YulTypedName",
														"src": "3124:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3135:11:5",
														"nodeType": "YulTypedName",
														"src": "3135:11:5",
														"type": ""
													}
												],
												"src": "3051:169:5"
											},
											{
												"body": {
													"nativeSrc": "3332:63:5",
													"nodeType": "YulBlock",
													"src": "3332:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3354:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3354:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3362:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3362:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:5"
																		},
																		"nativeSrc": "3350:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:14:5"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "3366:21:5",
																		"nodeType": "YulLiteral",
																		"src": "3366:21:5",
																		"type": "",
																		"value": "Token not supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3343:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:5"
																},
																"nativeSrc": "3343:45:5",
																"nodeType": "YulFunctionCall",
																"src": "3343:45:5"
															},
															"nativeSrc": "3343:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "3343:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
												"nativeSrc": "3226:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3324:6:5",
														"nodeType": "YulTypedName",
														"src": "3324:6:5",
														"type": ""
													}
												],
												"src": "3226:169:5"
											},
											{
												"body": {
													"nativeSrc": "3547:220:5",
													"nodeType": "YulBlock",
													"src": "3547:220:5",
													"statements": [
														{
															"nativeSrc": "3557:74:5",
															"nodeType": "YulAssignment",
															"src": "3557:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3623:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3623:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3564:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3564:58:5"
																},
																"nativeSrc": "3564:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3564:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3557:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3729:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3729:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																	"nativeSrc": "3640:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "3640:88:5"
																},
																"nativeSrc": "3640:93:5",
																"nodeType": "YulFunctionCall",
																"src": "3640:93:5"
															},
															"nativeSrc": "3640:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "3640:93:5"
														},
														{
															"nativeSrc": "3742:19:5",
															"nodeType": "YulAssignment",
															"src": "3742:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3753:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3753:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3758:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3758:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3749:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:5"
																},
																"nativeSrc": "3749:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3749:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3742:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3742:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3401:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3535:3:5",
														"nodeType": "YulTypedName",
														"src": "3535:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3543:3:5",
														"nodeType": "YulTypedName",
														"src": "3543:3:5",
														"type": ""
													}
												],
												"src": "3401:366:5"
											},
											{
												"body": {
													"nativeSrc": "3944:248:5",
													"nodeType": "YulBlock",
													"src": "3944:248:5",
													"statements": [
														{
															"nativeSrc": "3954:26:5",
															"nodeType": "YulAssignment",
															"src": "3954:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3966:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3966:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3977:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3977:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3962:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3962:3:5"
																},
																"nativeSrc": "3962:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3962:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3954:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3954:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4001:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4001:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4012:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4012:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3997:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3997:3:5"
																		},
																		"nativeSrc": "3997:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3997:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4020:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4020:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4026:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4016:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:5"
																		},
																		"nativeSrc": "4016:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3990:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:5"
																},
																"nativeSrc": "3990:47:5",
																"nodeType": "YulFunctionCall",
																"src": "3990:47:5"
															},
															"nativeSrc": "3990:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "3990:47:5"
														},
														{
															"nativeSrc": "4046:139:5",
															"nodeType": "YulAssignment",
															"src": "4046:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4180:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4180:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4054:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:124:5"
																},
																"nativeSrc": "4054:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4054:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4046:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4046:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3773:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3924:9:5",
														"nodeType": "YulTypedName",
														"src": "3924:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3939:4:5",
														"nodeType": "YulTypedName",
														"src": "3939:4:5",
														"type": ""
													}
												],
												"src": "3773:419:5"
											},
											{
												"body": {
													"nativeSrc": "4226:152:5",
													"nodeType": "YulBlock",
													"src": "4226:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4243:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4243:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4246:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4246:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4236:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4236:6:5"
																},
																"nativeSrc": "4236:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4236:88:5"
															},
															"nativeSrc": "4236:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4236:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4340:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4340:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4343:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4343:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4333:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:5"
																},
																"nativeSrc": "4333:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4333:15:5"
															},
															"nativeSrc": "4333:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4333:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4364:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4364:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4367:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4367:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4357:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:5"
																},
																"nativeSrc": "4357:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4357:15:5"
															},
															"nativeSrc": "4357:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4357:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4198:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4198:180:5"
											},
											{
												"body": {
													"nativeSrc": "4428:147:5",
													"nodeType": "YulBlock",
													"src": "4428:147:5",
													"statements": [
														{
															"nativeSrc": "4438:25:5",
															"nodeType": "YulAssignment",
															"src": "4438:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4461:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4461:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4443:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4443:17:5"
																},
																"nativeSrc": "4443:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4443:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4438:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4438:1:5"
																}
															]
														},
														{
															"nativeSrc": "4472:25:5",
															"nodeType": "YulAssignment",
															"src": "4472:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4495:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4495:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4477:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4477:17:5"
																},
																"nativeSrc": "4477:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4477:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4472:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4472:1:5"
																}
															]
														},
														{
															"nativeSrc": "4506:16:5",
															"nodeType": "YulAssignment",
															"src": "4506:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4517:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4517:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4520:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4520:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4513:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:5"
																},
																"nativeSrc": "4513:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4513:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4506:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4546:22:5",
																"nodeType": "YulBlock",
																"src": "4546:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4548:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4548:16:5"
																			},
																			"nativeSrc": "4548:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4548:18:5"
																		},
																		"nativeSrc": "4548:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4548:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4538:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4538:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4541:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4541:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4535:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4535:2:5"
																},
																"nativeSrc": "4535:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4535:10:5"
															},
															"nativeSrc": "4532:36:5",
															"nodeType": "YulIf",
															"src": "4532:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4384:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4415:1:5",
														"nodeType": "YulTypedName",
														"src": "4415:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4418:1:5",
														"nodeType": "YulTypedName",
														"src": "4418:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4424:3:5",
														"nodeType": "YulTypedName",
														"src": "4424:3:5",
														"type": ""
													}
												],
												"src": "4384:191:5"
											},
											{
												"body": {
													"nativeSrc": "4707:206:5",
													"nodeType": "YulBlock",
													"src": "4707:206:5",
													"statements": [
														{
															"nativeSrc": "4717:26:5",
															"nodeType": "YulAssignment",
															"src": "4717:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:5"
																},
																"nativeSrc": "4725:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4725:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4797:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4797:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4810:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4821:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4821:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4806:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4806:3:5"
																		},
																		"nativeSrc": "4806:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4753:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4753:43:5"
																},
																"nativeSrc": "4753:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4753:71:5"
															},
															"nativeSrc": "4753:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4753:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4878:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4878:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4891:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4891:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4902:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4902:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4887:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:5"
																		},
																		"nativeSrc": "4887:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4887:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4834:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4834:43:5"
																},
																"nativeSrc": "4834:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4834:72:5"
															},
															"nativeSrc": "4834:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4834:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4581:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4671:9:5",
														"nodeType": "YulTypedName",
														"src": "4671:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4683:6:5",
														"nodeType": "YulTypedName",
														"src": "4683:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4691:6:5",
														"nodeType": "YulTypedName",
														"src": "4691:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4702:4:5",
														"nodeType": "YulTypedName",
														"src": "4702:4:5",
														"type": ""
													}
												],
												"src": "4581:332:5"
											},
											{
												"body": {
													"nativeSrc": "4947:152:5",
													"nodeType": "YulBlock",
													"src": "4947:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4964:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4964:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4967:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4957:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:5"
																},
																"nativeSrc": "4957:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4957:88:5"
															},
															"nativeSrc": "4957:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4957:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5061:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5061:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5064:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5064:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5054:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5054:6:5"
																},
																"nativeSrc": "5054:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5054:15:5"
															},
															"nativeSrc": "5054:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5054:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5085:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5085:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5088:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5088:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5078:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:5"
																},
																"nativeSrc": "5078:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5078:15:5"
															},
															"nativeSrc": "5078:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5078:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4919:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4919:180:5"
											},
											{
												"body": {
													"nativeSrc": "5259:288:5",
													"nodeType": "YulBlock",
													"src": "5259:288:5",
													"statements": [
														{
															"nativeSrc": "5269:26:5",
															"nodeType": "YulAssignment",
															"src": "5269:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5281:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5292:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5292:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5277:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5277:3:5"
																},
																"nativeSrc": "5277:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5277:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5269:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5269:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5349:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5349:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5362:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5362:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5373:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5373:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5358:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:5"
																		},
																		"nativeSrc": "5358:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5358:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5305:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5305:43:5"
																},
																"nativeSrc": "5305:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5305:71:5"
															},
															"nativeSrc": "5305:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5305:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5430:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5430:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5443:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5443:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5454:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5454:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5439:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:5"
																		},
																		"nativeSrc": "5439:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5386:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5386:43:5"
																},
																"nativeSrc": "5386:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5386:72:5"
															},
															"nativeSrc": "5386:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5386:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5536:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5536:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5521:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:5"
																		},
																		"nativeSrc": "5521:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5468:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5468:43:5"
																},
																"nativeSrc": "5468:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5468:72:5"
															},
															"nativeSrc": "5468:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5468:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5105:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5215:9:5",
														"nodeType": "YulTypedName",
														"src": "5215:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5227:6:5",
														"nodeType": "YulTypedName",
														"src": "5227:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5235:6:5",
														"nodeType": "YulTypedName",
														"src": "5235:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5243:6:5",
														"nodeType": "YulTypedName",
														"src": "5243:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5254:4:5",
														"nodeType": "YulTypedName",
														"src": "5254:4:5",
														"type": ""
													}
												],
												"src": "5105:442:5"
											},
											{
												"body": {
													"nativeSrc": "5595:48:5",
													"nodeType": "YulBlock",
													"src": "5595:48:5",
													"statements": [
														{
															"nativeSrc": "5605:32:5",
															"nodeType": "YulAssignment",
															"src": "5605:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5630:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5630:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5623:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5623:6:5"
																		},
																		"nativeSrc": "5623:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5616:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:5"
																},
																"nativeSrc": "5616:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5616:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5605:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5605:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5553:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5577:5:5",
														"nodeType": "YulTypedName",
														"src": "5577:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5587:7:5",
														"nodeType": "YulTypedName",
														"src": "5587:7:5",
														"type": ""
													}
												],
												"src": "5553:90:5"
											},
											{
												"body": {
													"nativeSrc": "5689:76:5",
													"nodeType": "YulBlock",
													"src": "5689:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5743:16:5",
																"nodeType": "YulBlock",
																"src": "5743:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5752:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5752:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5755:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5755:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5745:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5745:6:5"
																			},
																			"nativeSrc": "5745:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5745:12:5"
																		},
																		"nativeSrc": "5745:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5712:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5712:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5734:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5734:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5719:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "5719:14:5"
																				},
																				"nativeSrc": "5719:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5719:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5709:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5709:2:5"
																		},
																		"nativeSrc": "5709:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5702:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:5"
																},
																"nativeSrc": "5702:40:5",
																"nodeType": "YulFunctionCall",
																"src": "5702:40:5"
															},
															"nativeSrc": "5699:60:5",
															"nodeType": "YulIf",
															"src": "5699:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5649:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5682:5:5",
														"nodeType": "YulTypedName",
														"src": "5682:5:5",
														"type": ""
													}
												],
												"src": "5649:116:5"
											},
											{
												"body": {
													"nativeSrc": "5831:77:5",
													"nodeType": "YulBlock",
													"src": "5831:77:5",
													"statements": [
														{
															"nativeSrc": "5841:22:5",
															"nodeType": "YulAssignment",
															"src": "5841:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5856:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5856:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5850:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5850:5:5"
																},
																"nativeSrc": "5850:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5850:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5841:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5841:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5896:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5896:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5872:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "5872:23:5"
																},
																"nativeSrc": "5872:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5872:30:5"
															},
															"nativeSrc": "5872:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5872:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5771:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5809:6:5",
														"nodeType": "YulTypedName",
														"src": "5809:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5817:3:5",
														"nodeType": "YulTypedName",
														"src": "5817:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5825:5:5",
														"nodeType": "YulTypedName",
														"src": "5825:5:5",
														"type": ""
													}
												],
												"src": "5771:137:5"
											},
											{
												"body": {
													"nativeSrc": "5988:271:5",
													"nodeType": "YulBlock",
													"src": "5988:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6034:83:5",
																"nodeType": "YulBlock",
																"src": "6034:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6036:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6036:77:5"
																			},
																			"nativeSrc": "6036:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6036:79:5"
																		},
																		"nativeSrc": "6036:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6036:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6009:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6009:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6018:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6018:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6005:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6005:3:5"
																		},
																		"nativeSrc": "6005:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6005:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6030:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6001:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6001:3:5"
																},
																"nativeSrc": "6001:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6001:32:5"
															},
															"nativeSrc": "5998:119:5",
															"nodeType": "YulIf",
															"src": "5998:119:5"
														},
														{
															"nativeSrc": "6127:125:5",
															"nodeType": "YulBlock",
															"src": "6127:125:5",
															"statements": [
																{
																	"nativeSrc": "6142:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6142:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6156:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6156:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6146:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6146:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6171:71:5",
																	"nodeType": "YulAssignment",
																	"src": "6171:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6214:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6214:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6225:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6210:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6210:3:5"
																				},
																				"nativeSrc": "6210:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6210:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6234:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6234:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6181:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "6181:28:5"
																		},
																		"nativeSrc": "6181:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6181:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6171:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6171:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5914:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:5",
														"nodeType": "YulTypedName",
														"src": "5958:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5969:7:5",
														"nodeType": "YulTypedName",
														"src": "5969:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5981:6:5",
														"nodeType": "YulTypedName",
														"src": "5981:6:5",
														"type": ""
													}
												],
												"src": "5914:345:5"
											},
											{
												"body": {
													"nativeSrc": "6323:40:5",
													"nodeType": "YulBlock",
													"src": "6323:40:5",
													"statements": [
														{
															"nativeSrc": "6334:22:5",
															"nodeType": "YulAssignment",
															"src": "6334:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6350:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6350:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6344:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6344:5:5"
																},
																"nativeSrc": "6344:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6344:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6265:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6306:5:5",
														"nodeType": "YulTypedName",
														"src": "6306:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6316:6:5",
														"nodeType": "YulTypedName",
														"src": "6316:6:5",
														"type": ""
													}
												],
												"src": "6265:98:5"
											},
											{
												"body": {
													"nativeSrc": "6482:34:5",
													"nodeType": "YulBlock",
													"src": "6482:34:5",
													"statements": [
														{
															"nativeSrc": "6492:18:5",
															"nodeType": "YulAssignment",
															"src": "6492:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6507:3:5",
																"nodeType": "YulIdentifier",
																"src": "6507:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6492:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6492:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6369:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6454:3:5",
														"nodeType": "YulTypedName",
														"src": "6454:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6459:6:5",
														"nodeType": "YulTypedName",
														"src": "6459:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6470:11:5",
														"nodeType": "YulTypedName",
														"src": "6470:11:5",
														"type": ""
													}
												],
												"src": "6369:147:5"
											},
											{
												"body": {
													"nativeSrc": "6584:77:5",
													"nodeType": "YulBlock",
													"src": "6584:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6601:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6601:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6606:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6606:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6611:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6611:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6595:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6595:5:5"
																},
																"nativeSrc": "6595:23:5",
																"nodeType": "YulFunctionCall",
																"src": "6595:23:5"
															},
															"nativeSrc": "6595:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "6595:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6638:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6638:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6643:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6643:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6634:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:5"
																		},
																		"nativeSrc": "6634:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6634:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6652:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6627:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:5"
																},
																"nativeSrc": "6627:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6627:27:5"
															},
															"nativeSrc": "6627:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "6627:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6522:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6566:3:5",
														"nodeType": "YulTypedName",
														"src": "6566:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6571:3:5",
														"nodeType": "YulTypedName",
														"src": "6571:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6576:6:5",
														"nodeType": "YulTypedName",
														"src": "6576:6:5",
														"type": ""
													}
												],
												"src": "6522:139:5"
											},
											{
												"body": {
													"nativeSrc": "6775:278:5",
													"nodeType": "YulBlock",
													"src": "6775:278:5",
													"statements": [
														{
															"nativeSrc": "6785:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6785:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6831:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6831:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6799:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6799:31:5"
																},
																"nativeSrc": "6799:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6799:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6789:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6789:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6846:95:5",
															"nodeType": "YulAssignment",
															"src": "6846:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6929:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6929:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6934:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6934:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6853:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "6853:75:5"
																},
																"nativeSrc": "6853:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6853:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6846:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6846:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6989:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6989:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6996:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:5"
																		},
																		"nativeSrc": "6985:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7003:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7003:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7008:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6950:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6950:34:5"
																},
																"nativeSrc": "6950:65:5",
																"nodeType": "YulFunctionCall",
																"src": "6950:65:5"
															},
															"nativeSrc": "6950:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "6950:65:5"
														},
														{
															"nativeSrc": "7024:23:5",
															"nodeType": "YulAssignment",
															"src": "7024:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7035:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7035:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7040:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7040:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7031:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:5"
																},
																"nativeSrc": "7031:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7031:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7024:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7024:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6667:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6756:5:5",
														"nodeType": "YulTypedName",
														"src": "6756:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6763:3:5",
														"nodeType": "YulTypedName",
														"src": "6763:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6771:3:5",
														"nodeType": "YulTypedName",
														"src": "6771:3:5",
														"type": ""
													}
												],
												"src": "6667:386:5"
											},
											{
												"body": {
													"nativeSrc": "7193:137:5",
													"nodeType": "YulBlock",
													"src": "7193:137:5",
													"statements": [
														{
															"nativeSrc": "7204:100:5",
															"nodeType": "YulAssignment",
															"src": "7204:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7291:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7291:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7300:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7300:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7211:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "7211:79:5"
																},
																"nativeSrc": "7211:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7211:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7204:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:5"
																}
															]
														},
														{
															"nativeSrc": "7314:10:5",
															"nodeType": "YulAssignment",
															"src": "7314:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7321:3:5",
																"nodeType": "YulIdentifier",
																"src": "7321:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7314:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7314:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7059:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7172:3:5",
														"nodeType": "YulTypedName",
														"src": "7172:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7178:6:5",
														"nodeType": "YulTypedName",
														"src": "7178:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7189:3:5",
														"nodeType": "YulTypedName",
														"src": "7189:3:5",
														"type": ""
													}
												],
												"src": "7059:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633053f0b2146100435780635668870014610073578063c62556261461008f575b5f80fd5b61005d600480360381019061005891906105ef565b6100bf565b60405161006a9190610632565b60405180910390f35b61008d60048036038101906100889190610675565b6100d3565b005b6100a960048036038101906100a491906106b3565b6101ee565b6040516100b691906106ed565b60405180910390f35b5f602052805f5260405f205f915090505481565b6100dc82610229565b61011b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011290610760565b60405180910390fd5b6101483330838573ffffffffffffffffffffffffffffffffffffffff166102cb909392919063ffffffff16565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461019391906107ab565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb483836040516101e29291906107de565b60405180910390a25050565b600181815481106101fd575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f90505b6001805490508110156102c1578273ffffffffffffffffffffffffffffffffffffffff166001828154811061026757610266610805565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102b45760019150506102c6565b808060010191505061022f565b505f90505b919050565b610347848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161030093929190610832565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061034d565b50505050565b5f610377828473ffffffffffffffffffffffffffffffffffffffff166103e290919063ffffffff16565b90505f81511415801561039b575080806020019051810190610399919061089c565b155b156103dd57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016103d491906106ed565b60405180910390fd5b505050565b60606103ef83835f6103f7565b905092915050565b60608147101561043e57306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161043591906106ed565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516104669190610919565b5f6040518083038185875af1925050503d805f81146104a0576040519150601f19603f3d011682016040523d82523d5f602084013e6104a5565b606091505b50915091506104b58683836104c0565b925050509392505050565b6060826104d5576104d08261054d565b610545565b5f82511480156104fb57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561053d57836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161053491906106ed565b60405180910390fd5b819050610546565b5b9392505050565b5f8151111561055f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105be82610595565b9050919050565b6105ce816105b4565b81146105d8575f80fd5b50565b5f813590506105e9816105c5565b92915050565b5f6020828403121561060457610603610591565b5b5f610611848285016105db565b91505092915050565b5f819050919050565b61062c8161061a565b82525050565b5f6020820190506106455f830184610623565b92915050565b6106548161061a565b811461065e575f80fd5b50565b5f8135905061066f8161064b565b92915050565b5f806040838503121561068b5761068a610591565b5b5f610698858286016105db565b92505060206106a985828601610661565b9150509250929050565b5f602082840312156106c8576106c7610591565b5b5f6106d584828501610661565b91505092915050565b6106e7816105b4565b82525050565b5f6020820190506107005f8301846106de565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f61074a601383610706565b915061075582610716565b602082019050919050565b5f6020820190508181035f8301526107778161073e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107b58261061a565b91506107c08361061a565b92508282019050808211156107d8576107d761077e565b5b92915050565b5f6040820190506107f15f8301856106de565b6107fe6020830184610623565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6060820190506108455f8301866106de565b61085260208301856106de565b61085f6040830184610623565b949350505050565b5f8115159050919050565b61087b81610867565b8114610885575f80fd5b50565b5f8151905061089681610872565b92915050565b5f602082840312156108b1576108b0610591565b5b5f6108be84828501610888565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6108f3826108c7565b6108fd81856108d1565b935061090d8185602086016108db565b80840191505092915050565b5f61092482846108e9565b91508190509291505056fea2646970667358221220e3f26c5222db058c19dd39d26685133df7145d745cbd436495863881c95c006464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3053F0B2 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC DUP3 PUSH2 0x229 JUMP JUMPDEST PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x7AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP3 SWAP2 SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2C1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x805 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B4 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2C6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x22F JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x300 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x377 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3DD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3EF DUP4 DUP4 PUSH0 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x43E JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x919 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4B5 DUP7 DUP4 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4D5 JUMPI PUSH2 0x4D0 DUP3 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x4FB JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x546 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x55F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BE DUP3 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5E9 DUP2 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x611 DUP5 DUP3 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62C DUP2 PUSH2 0x61A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH0 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x654 DUP2 PUSH2 0x61A JUMP JUMPDEST DUP2 EQ PUSH2 0x65E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66F DUP2 PUSH2 0x64B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x68B JUMPI PUSH2 0x68A PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x698 DUP6 DUP3 DUP7 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D5 DUP5 DUP3 DUP6 ADD PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E7 DUP2 PUSH2 0x5B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x700 PUSH0 DUP4 ADD DUP5 PUSH2 0x6DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x74A PUSH1 0x13 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP PUSH2 0x755 DUP3 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x777 DUP2 PUSH2 0x73E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7B5 DUP3 PUSH2 0x61A JUMP JUMPDEST SWAP2 POP PUSH2 0x7C0 DUP4 PUSH2 0x61A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D7 PUSH2 0x77E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x7FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x845 PUSH0 DUP4 ADD DUP7 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x852 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x85F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87B DUP2 PUSH2 0x867 JUMP JUMPDEST DUP2 EQ PUSH2 0x885 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x896 DUP2 PUSH2 0x872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8BE DUP5 DUP3 DUP6 ADD PUSH2 0x888 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F3 DUP3 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x8FD DUP2 DUP6 PUSH2 0x8D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x90D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8DB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 DUP3 DUP5 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 CALLCODE PUSH13 0x5222DB058C19DD39D26685133D 0xF7 EQ TSTORE PUSH21 0x5CBD436495863881C95C006464736F6C634300081A STOP CALLER ",
							"sourceMap": "187:935:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;313:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:53;;;;;;;;;;;;;;;;;:::o;530:315::-;611:23;628:5;611:16;:23::i;:::-;603:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;669:65;700:10;720:4;727:6;676:5;669:30;;;;:65;;;;;;:::i;:::-;774:6;745:18;:25;764:5;745:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;811:10;796:41;;;823:5;830:6;796:41;;;;;;;:::i;:::-;;;;;;;;530:315;;:::o;313:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;853:266::-;917:4;939:6;948:1;939:10;;934:155;955:15;:22;;;;951:1;:26;934:155;;;1025:5;1003:27;;:15;1019:1;1003:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;;999:79;;1058:4;1051:11;;;;;999:79;979:3;;;;;;;934:155;;;;1106:5;1099:12;;853:266;;;;:::o;1702:188:2:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:::-;3366:21;3362:1;3354:6;3350:14;3343:45;3226:169;:::o;3401:366::-;3543:3;3564:67;3628:2;3623:3;3564:67;:::i;:::-;3557:74;;3640:93;3729:3;3640:93;:::i;:::-;3758:2;3753:3;3749:12;3742:19;;3401:366;;;:::o;3773:419::-;3939:4;3977:2;3966:9;3962:18;3954:26;;4026:9;4020:4;4016:20;4012:1;4001:9;3997:17;3990:47;4054:131;4180:4;4054:131;:::i;:::-;4046:139;;3773:419;;;:::o;4198:180::-;4246:77;4243:1;4236:88;4343:4;4340:1;4333:15;4367:4;4364:1;4357:15;4384:191;4424:3;4443:20;4461:1;4443:20;:::i;:::-;4438:25;;4477:20;4495:1;4477:20;:::i;:::-;4472:25;;4520:1;4517;4513:9;4506:16;;4541:3;4538:1;4535:10;4532:36;;;4548:18;;:::i;:::-;4532:36;4384:191;;;;:::o;4581:332::-;4702:4;4740:2;4729:9;4725:18;4717:26;;4753:71;4821:1;4810:9;4806:17;4797:6;4753:71;:::i;:::-;4834:72;4902:2;4891:9;4887:18;4878:6;4834:72;:::i;:::-;4581:332;;;;;:::o;4919:180::-;4967:77;4964:1;4957:88;5064:4;5061:1;5054:15;5088:4;5085:1;5078:15;5105:442;5254:4;5292:2;5281:9;5277:18;5269:26;;5305:71;5373:1;5362:9;5358:17;5349:6;5305:71;:::i;:::-;5386:72;5454:2;5443:9;5439:18;5430:6;5386:72;:::i;:::-;5468;5536:2;5525:9;5521:18;5512:6;5468:72;:::i;:::-;5105:442;;;;;;:::o;5553:90::-;5587:7;5630:5;5623:13;5616:21;5605:32;;5553:90;;;:::o;5649:116::-;5719:21;5734:5;5719:21;:::i;:::-;5712:5;5709:32;5699:60;;5755:1;5752;5745:12;5699:60;5649:116;:::o;5771:137::-;5825:5;5856:6;5850:13;5841:22;;5872:30;5896:5;5872:30;:::i;:::-;5771:137;;;;:::o;5914:345::-;5981:6;6030:2;6018:9;6009:7;6005:23;6001:32;5998:119;;;6036:79;;:::i;:::-;5998:119;6156:1;6181:61;6234:7;6225:6;6214:9;6210:22;6181:61;:::i;:::-;6171:71;;6127:125;5914:345;;;;:::o;6265:98::-;6316:6;6350:5;6344:12;6334:22;;6265:98;;;:::o;6369:147::-;6470:11;6507:3;6492:18;;6369:147;;;;:::o;6522:139::-;6611:6;6606:3;6601;6595:23;6652:1;6643:6;6638:3;6634:16;6627:27;6522:139;;;:::o;6667:386::-;6771:3;6799:38;6831:5;6799:38;:::i;:::-;6853:88;6934:6;6929:3;6853:88;:::i;:::-;6846:95;;6950:65;7008:6;7003:3;6996:4;6989:5;6985:16;6950:65;:::i;:::-;7040:6;7035:3;7031:16;7024:23;;6775:278;6667:386;;;;:::o;7059:271::-;7189:3;7211:93;7300:3;7291:6;7211:93;:::i;:::-;7204:100;;7321:3;7314:10;;7059:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "481000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,uint256)": "infinite",
								"supportedTokens(uint256)": "4966",
								"totalPoolLiquidity(address)": "2779"
							},
							"internal": {
								"isSupportedToken(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 522,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 507,
									"end": 514,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 489,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 489,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 489,
									"end": 514,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 440,
									"end": 522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 187,
									"end": 1122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3382,
									"end": 3388,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3433,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3410,
									"end": 3417,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3429,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3402,
									"end": 3434,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3437,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3578,
									"end": 3579,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3563,
									"end": 3580,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3557,
									"end": 3581,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3608,
									"end": 3626,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3597,
									"end": 3627,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 3630,
									"end": 3709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3816,
									"end": 3823,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3796,
									"end": 3805,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3792,
									"end": 3814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3735,
									"end": 3824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3528,
									"end": 3834,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1122,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3f26c5222db058c19dd39d26685133df7145d745cbd436495863881c95c006464736f6c634300081a0033",
									".code": [
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "3053F0B2"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "56688700"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "C6255626"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 1122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 530,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 530,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 313,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 530,
											"end": 845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 611,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 611,
											"end": 634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 611,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 603,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 603,
											"end": 658,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 603,
											"end": 658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 700,
											"end": 710,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 720,
											"end": 724,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 727,
											"end": 733,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 669,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 669,
											"end": 699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 669,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 669,
											"end": 699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 669,
											"end": 734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 669,
											"end": 734,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 669,
											"end": 734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 774,
											"end": 780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 769,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 770,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 745,
											"end": 770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 745,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 745,
											"end": 780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 821,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 796,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 796,
											"end": 837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 837,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 530,
											"end": 845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 345,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 939,
											"end": 949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 955,
											"end": 970,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 977,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 955,
											"end": 977,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 955,
											"end": 977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 955,
											"end": 977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 977,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1018,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1003,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1030,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1078,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1078,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 979,
											"end": 982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 853,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2967,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3204,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3395,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3226,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3387,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E206E6F7420737570706F7274656400000000000000000000000000"
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3401,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3564,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3631,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3564,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3640,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3733,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3640,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4036,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3990,
											"end": 4037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4180,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4054,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4054,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4046,
											"end": 4185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4046,
											"end": 4185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 4192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 4192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4198,
											"end": 4378,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4198,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4347,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4340,
											"end": 4341,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4372,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4424,
											"end": 4427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4443,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4477,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4541,
											"end": 4544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4548,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4753,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4834,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 5099,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4919,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5044,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4964,
											"end": 4965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 5045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5068,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5054,
											"end": 5069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5092,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5093,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5269,
											"end": 5295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5269,
											"end": 5295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5373,
											"end": 5374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5305,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5376,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5305,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5436,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5386,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5458,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5386,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5468,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5540,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5468,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5643,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5553,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5636,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5637,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5765,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5649,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5734,
											"end": 5739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5719,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5741,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5699,
											"end": 5759,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5759,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5699,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5850,
											"end": 5863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5872,
											"end": 5902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5902,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5872,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6028,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6033,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6117,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5998,
											"end": 6117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6036,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 6036,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6115,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6036,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6117,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5998,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6234,
											"end": 6241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6181,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6242,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6181,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6171,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6171,
											"end": 6242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6363,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6265,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6661,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6522,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6618,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6831,
											"end": 6836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 6799,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6837,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6799,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6932,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6853,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6941,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6853,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6941,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6950,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 6994,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 7001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6950,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6950,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6950,
											"end": 7015,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6950,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7024,
											"end": 7047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7024,
											"end": 7047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6775,
											"end": 7053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 7053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7211,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 7211,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7211,
											"end": 7304,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7211,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7314,
											"end": 7324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/MultiTokenPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,uint256)": "56688700",
							"supportedTokens(uint256)": "c6255626",
							"totalPoolLiquidity(address)": "3053f0b2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalPoolLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiTokenPool.sol\":\"MultiTokenPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/MultiTokenPool.sol\":{\"keccak256\":\"0xd6e01060359dba1991d02dd5e5d873408a30215e1810e00f8338cc1766aa655f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46d125e1e2bd55acbb8f4490101e549b6bcdfb7fb5401f0119ca4eedafa58a01\",\"dweb:/ipfs/QmVQvpAhxKZ9JQsje7ayC93PdDbQeDMJGZ8DL7TwKjsPCF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 668,
								"contract": "contracts/MultiTokenPool.sol:MultiTokenPool",
								"label": "totalPoolLiquidity",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 671,
								"contract": "contracts/MultiTokenPool.sol:MultiTokenPool",
								"label": "supportedTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"contracts/MultiTokenPool.sol": {
				"ast": {
					"absolutePath": "contracts/MultiTokenPool.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"MultiTokenPool": [
							764
						],
						"SafeERC20": [
							403
						]
					},
					"id": 765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 78,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 765,
							"sourceUnit": 404,
							"src": "118:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MultiTokenPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 764,
							"linearizedBaseContracts": [
								764
							],
							"name": "MultiTokenPool",
							"nameLocation": "196:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"224:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "224:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "218:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"238:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "238:6:4"
										},
										"referencedDeclaration": 77,
										"src": "238:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3053f0b2",
									"id": 668,
									"mutability": "mutable",
									"name": "totalPoolLiquidity",
									"nameLocation": "288:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "253:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 667,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 665,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "261:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "253:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 666,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "272:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6255626",
									"id": 671,
									"mutability": "mutable",
									"name": "supportedTokens",
									"nameLocation": "330:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 764,
									"src": "313:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 669,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "313:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 670,
										"nodeType": "ArrayTypeName",
										"src": "313:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4",
									"id": 679,
									"name": "LiquidityAdded",
									"nameLocation": "360:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "391:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "375:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "409:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "401:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "424:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "416:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:57:4"
									},
									"src": "354:78:4"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "478:44:4",
										"statements": [
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 685,
														"name": "supportedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "489:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 686,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "489:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "489:25:4"
											}
										]
									},
									"id": 690,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "469:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "452:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 680,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "452:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 681,
													"nodeType": "ArrayTypeName",
													"src": "452:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:26:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:0:4"
									},
									"scope": 764,
									"src": "440:82:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "592:253:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "628:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 698,
																"name": "isSupportedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "611:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420737570706f72746564",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "636:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															},
															"value": "Token not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "603:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "603:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "700:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "704:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "700:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 712,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "720:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiTokenPool_$764",
																		"typeString": "contract MultiTokenPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiTokenPool_$764",
																		"typeString": "contract MultiTokenPool"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "712:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "712:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "712:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "727:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 705,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "676:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 704,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "669:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "669:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "683:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "669:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "669:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "669:65:4"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 717,
															"name": "totalPoolLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "745:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 719,
														"indexExpression": {
															"id": 718,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "764:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "745:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 720,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "774:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "745:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "745:35:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "811:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "815:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "811:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "823:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "830:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "796:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "796:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "EmitStatement",
												"src": "791:46:4"
											}
										]
									},
									"functionSelector": "56688700",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "539:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "560:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "575:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "567:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:31:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:4"
									},
									"scope": 764,
									"src": "530:315:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "923:196:4",
										"statements": [
											{
												"body": {
													"id": 758,
													"nodeType": "Block",
													"src": "984:105:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 749,
																		"name": "supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "1003:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 751,
																	"indexExpression": {
																		"id": 750,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "1019:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1003:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 752,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1025:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1003:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "999:79:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "1032:46:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1058:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 737,
																		"id": 755,
																		"nodeType": "Return",
																		"src": "1051:11:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "951:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 743,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "955:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "971:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "955:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "951:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"initializationExpression": {
													"assignments": [
														739
													],
													"declarations": [
														{
															"constant": false,
															"id": 739,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "944:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 759,
															"src": "939:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 738,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "939:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 741,
													"initialValue": {
														"hexValue": "30",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "948:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "939:10:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "979:3:4",
														"subExpression": {
															"id": 746,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "979:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 748,
													"nodeType": "ExpressionStatement",
													"src": "979:3:4"
												},
												"nodeType": "ForStatement",
												"src": "934:155:4"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1106:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 737,
												"id": 761,
												"nodeType": "Return",
												"src": "1099:12:4"
											}
										]
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedToken",
									"nameLocation": "862:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "887:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "879:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:15:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:6:4"
									},
									"scope": 764,
									"src": "853:266:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 765,
							"src": "187:935:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								679
							]
						}
					],
					"src": "33:1091:4"
				},
				"id": 4
			}
		}
	}
}